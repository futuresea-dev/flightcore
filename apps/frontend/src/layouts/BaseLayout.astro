---
import { ViewTransitions } from 'astro:transitions'
import { CookieConsent } from '@flightcore/uikit'
import { BookingModal } from '@flightcore/booking'

import '../styles/fonts.css'
import '../styles/global.css'

interface Props {
  meta?: MetaProps
}

const {
  meta = {
    title: 'üåê Studio Nagra≈Ñ | FLIGHTCORE Warszawa',
    description: '',
    url: Astro.url.pathname,
    name: 'üåê Studio Nagra≈Ñ | FLIGHTCORE Warszawa',
  },
} = Astro.props
---

<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="robots" content="noindex,follow" />
    <link rel="icon" href="/favicon.png" sizes="192x192" />
    <link rel="prefetch" href="/assets/fonts/Tactic Round Bld.woff2" as="font" type="font/woff2" crossorigin="anonymous" />
    <!-- <link rel="prefetch" href="/assets/fonts/Tactic Round Blk.woff2" as="font" type="font/woff2" crossorigin="anonymous" /> -->
    <!-- <link rel="prefetch" href="/assets/fonts/Tactic Round Lgt.woff2" as="font" type="font/woff2" crossorigin="anonymous" /> -->
    <!-- <link rel="prefetch" href="/assets/fonts/Tactic Round Med.woff2" as="font" type="font/woff2" crossorigin="anonymous" /> -->
    <link rel="prefetch" href="/assets/fonts/Tactic Round Reg.woff2" as="font" type="font/woff2" crossorigin="anonymous" />
    <!-- <link rel="prefetch" href="/assets/fonts/Tactic Round Thn.woff2" as="font" type="font/woff2" crossorigin="anonymous" /> -->
    <!-- <link rel="prefetch" href="/assets/fonts/Tactic Round Ult.woff2" as="font" type="font/woff2" crossorigin="anonymous" /> -->
    <slot name="meta">
      <link rel="preconnect" href={import.meta.env.PUBLIC_BOOKING_IFRAME_SRC} />
      <meta name="description" content={meta.description} />
      <title>{meta.title}</title>
      <meta property="og:title" content={meta.title} />
      <meta property="og:description" content={meta.description} />
      <meta property="og:url" content={meta.url} />
      <meta property="og:type" content="website" />
      <meta property="og:site_name" content={meta.name} />
      <meta name="apple-mobile-web-app-capable" content="yes" />
      <meta name="apple-mobile-web-app-status-bar-style" content="black" />
    </slot>
    <ViewTransitions />
  </head>
  <body class="bg-blue-dark">
    <div id="viewport">
      <slot />
    </div>
    <div id="portal"></div>
    <BookingModal transition:persist client:only="react" />
    <CookieConsent client:load />
    <div id="overlay" class="hidden">
      <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path
          class="opacity-75"
          fill="currentColor"
          d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
        ></path>
      </svg>
    </div>
  </body>
</html>

<script>
  import { LoaderOverlayController } from '@flightcore/uikit'
  // Shows <LoaderOverlay /> on route change
  document.addEventListener('astro:before-preparation', async (ev) => {
    const originalLoader = ev.loader
    ev.loader = async function () {
      LoaderOverlayController.show()
      await originalLoader()
      LoaderOverlayController.hide()
    }
  })
</script>

<style>
  #overlay {
    display: block;
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
  }
  #overlay:not(.hidden) {
    z-index: 999999;
    visibility: visible;
  }
  #overlay.hidden {
    visibility: hidden;
  }
</style>

<style>
  #viewport {
    min-height: 100svh;
  }
</style>

<script>
  import AOS from 'aos'
  import 'aos/dist/aos.css'
  function AOSInit() {
    AOS.init({
      once: true,
    })
  }
  AOSInit() // Init load
  document.addEventListener('astro:after-swap', AOSInit) // Re-init after swap
</script>

<script>
  import { handleBookingDataAttributeNodes } from '@flightcore/booking'
  handleBookingDataAttributeNodes() // Init load
  document.addEventListener('astro:after-swap', handleBookingDataAttributeNodes) // Re-init after swap
</script>
