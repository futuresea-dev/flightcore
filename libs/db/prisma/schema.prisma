generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model SoundEngineer {
  id Int @id @default(autoincrement())

  nickname    String? // .ksywa
  firstname   String? // .imie
  lastname    String? // .nazwisko
  phoneNumber String? // .nrtel
  discord     String? // .discord
  description String?

  // Preferences
  prefersTV         String?
  prefersMinimeters String?
  prefersDPI        String?

  weeklyAvailability         SoundEngineerWeeklyAvailability[]
  particularDaysAvailability SoundEngineerParticularDaysAvailability[] // Sound engineer particular days availability
  appointments               Appointment[] // Client appoinments 

  hidden Boolean @default(true) // Is not exposed to the FE
}

model SoundEngineerWeeklyAvailability {
  id Int @id @default(autoincrement())

  dayOfWeek DayOfWeek

  startTime String
  endTime   String

  soundEngineerId Int
  soundEngineer   SoundEngineer @relation(fields: [soundEngineerId], references: [id])

  isAvailable Boolean @default(true)

  @@index([id, soundEngineerId])
}

model SoundEngineerParticularDaysAvailability {
  id Int @id @default(autoincrement())

  date      DateTime
  startTime String
  endTime   String

  soundEngineerId Int
  soundEngineer   SoundEngineer @relation(fields: [soundEngineerId], references: [id])

  isAvailable Boolean @default(true)

  @@index([id, soundEngineerId])
}

model Studio {
  id      Int     @id @default(autoincrement())
  name    String?
  address String?

  @@index([id])
}

model Appointment {
  id Int @id @default(autoincrement())

  date      DateTime? // Select calendar date
  startHour DateTime? // Select session start hour

  comment String? // Session comment (uwagi)

  soundEngineerId Int
  soundEngineer   SoundEngineer @relation(fields: [soundEngineerId], references: [id])

  clientId Int
  client   Client @relation(fields: [clientId], references: [id])

  @@index([id, clientId])
}

model Client {
  id           Int           @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String
  phoneNumber  String
  appointments Appointment[]
}
